-- Tinco Andringa (s0159786) & Daniel Moscoviter (s0140155)

MODULE Track(S2_green)
  VAR
    T0_occupied : boolean;
    T1_occupied : boolean;
    T2_occupied : boolean;
    T3_occupied : boolean;
    T4_occupied : boolean;

  ASSIGN
    init(T0_occupied)   := FALSE;
    init(T1_occupied)   := FALSE;
    init(T2_occupied)   := FALSE;
    init(T3_occupied)   := FALSE;
    init(T4_occupied)   := FALSE;

    next(T0_occupied)   := case
      !(T0_occupied|T1_occupied|T2_occupied|T3_occupied) : {TRUE,FALSE};
      TRUE : FALSE;
    esac;
    next(T1_occupied)   := case
      T0_occupied : TRUE;
      S2_green : FALSE;
      TRUE : T1_occupied;
    esac;
    next(T2_occupied)   := case
      T1_occupied & S2_green : TRUE;
      TRUE : FALSE;
    esac;
    next(T3_occupied)   := case
      T2_occupied : TRUE;
      TRUE : FALSE;
    esac;
    next(T4_occupied)   := case
      T3_occupied : TRUE;
      TRUE : FALSE;
    esac;

MODULE Car(W1_active, W2_active)
  VAR
    cars_crossing : boolean;
  ASSIGN
    init(cars_crossing) := FALSE;

    next(cars_crossing) := case
      !W1_active | !W2_active : {TRUE,FALSE};
      TRUE : FALSE;
    esac;

MODULE Barrier(request)
  VAR
    open : boolean;
    closing : boolean;
    closed : boolean;

  FAIRNESS !(closing)

  ASSIGN
    init(open)       := TRUE;
    init(closed)     := FALSE;
    init(closing)    := FALSE;

    -- open    -> !open   -> !open  -> !open   -> open
    -- !closed -> !closed -> closed -> !closed -> !closed
    -- !closing-> closing -> !closing -> !closing -> !closing
    next(open)  := case
       request | closed | closing : FALSE;
       TRUE : TRUE;
    esac;

    next(closing) := case
      request & !closed : {TRUE, FALSE};
      TRUE : FALSE;
    esac;

    next(closed) := case
       !closed & closing : TRUE;
       request : TRUE;
       TRUE : FALSE;
    esac;

MODULE Environment(
         S2_red,S2_green,
         S3_red,S3_green,
         W1_active,W2_active,
         B1_request,B2_request)
  VAR
    B1 : Barrier(B1_request);
    B2 : Barrier(B2_request);
    Track : Track(S2_green);
    CarsCrossing : Car(W1_active, W2_active);
  DEFINE
    S1_red := Track.T0_occupied;
    S1_green := !S1_red;
    S4_red := Track.T4_occupied;
    S4_green := !S4_red;
    T1_occupied := Track.T1_occupied;
    T2_occupied := Track.T2_occupied;
    T3_occupied := Track.T3_occupied;
    cars_crossing := CarsCrossing.cars_crossing;
    B1_open    := B1.open ;
    B1_closed  := B1.closed ;
    B2_open    := B2.open ;
    B2_closed  := B2.closed ;

